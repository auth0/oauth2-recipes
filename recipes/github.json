{"name":"github","strategy":"oauth2","options":{"authorizationURL":"","tokenURL":"","scope":"","scripts":{"fetchUserProfile":"function(accessToken, ctx, cb) {\n  request.get('https://api.github.com/user', {\n    headers: {\n      'User-Agent': 'Auth0-App',\n      'Authorization': 'Bearer ' + accessToken\n    }\n  }, function(e, r, body) {\n    if (e) return cb(e);\n    if (r.statusCode !== 200) return cb(new Error('StatusCode: ' + r.statusCode));\n\n    const user = JSON.parse(body);\n\n    request.get('https://api.github.com/user/emails', {\n      headers: {\n        'User-Agent': 'Auth0-App',\n        'Authorization': 'Bearer ' + accessToken\n      }\n    }, function(e, r, body) {\n      if (e) return cb(e);\n      if (r.statusCode !== 200) return cb(new Error('StatusCode: ' + r.statusCode));\n\n      const emails = JSON.parse(body);\n\n      const mainEmail = emails.find(x => x.email === user.email);\n      const email_verified = mainEmail ? mainEmail.verified : false;\n\n      cb(null, {\n        user_id: user.id,\n        email: user.email,\n        name: user.name,\n        picture: user.avatar_url,\n        nickname: user.login,\n        gravatar_id: user.gravatar_id,\n        url: user.url,\n        html_url: user.html_url,\n        followers_url: user.followers_url,\n        following_url: user.following_url,\n        gists_url: user.gists_url,\n        starred_url: user.starred_url,\n        subscriptions_url: user.subscriptions_url,\n        organizations_url: user.organizations_url,\n        repos_url: user.repos_url,\n        events_url: user.events_url,\n        received_events_url: user.received_events_url,\n        type: user.type,\n        site_admin: user.site_admin,\n        location: user.location,\n        public_repos: user.public_repos,\n        public_gists: user.public_gists,\n        followers: user.followers,\n        following: user.following,\n        emails: emails,\n        email_verified: email_verified,\n        token: accessToken,\n        scopes: ctx.scope.split(',')\n      });\n    });\n  });\n}"}}}